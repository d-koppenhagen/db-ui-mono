@use "sass:string";
@use "sass:color";
@use "variables";

$default-alpha: 0.08;
$default-alpha-hover: 0.16;
$default-alpha-pressed: 0.24;

@mixin set-transparent-bg($alpha: $default-alpha) {
	background-color: color-mix(
		in srgb,
		transparent string.unquote(calc((1 - $alpha) * 100) + "%"),
		var(--db-current-base-color)
	);
}

@mixin set-transparent-bg-hover($with-enabled: true) {
	@include set-transparent-bg();

	@if ($with-enabled) {
		&:enabled {
			&:hover {
				@include set-transparent-bg($default-alpha-hover);
			}
		}
	} @else {
		&:hover {
			@include set-transparent-bg($default-alpha-hover);
		}
	}
}

@mixin set-transparent-bg-interactive($with-enabled: true) {
	@include set-transparent-bg-hover($with-enabled);

	@if ($with-enabled) {
		&:enabled {
			&:active {
				@include set-transparent-bg($default-alpha-pressed);
			}
		}
	} @else {
		&:active {
			@include set-transparent-bg($default-alpha-pressed);
		}
	}
}

@mixin color-variants($interactive) {
	@each $variant in variables.$variants {
		&[data-color-variant="#{$variant}"] {
			@extend %db-bg-#{$variant};
		}
		@if ($interactive == true) {
			&[data-color-variant="#{$variant}-ia"] {
				@extend %db-bg-#{$variant};
				@include set-transparent-bg-interactive();
			}
		}
	}
}

%color-variants {
	@include color-variants(false);
}
%color-variants-ia {
	@include color-variants(true);
}

@each $variant in variables.$variants {
	%db-#{$variant}-component {
		--db-current-color: var(--db-#{$variant}-bg);
		color: var(--db-current-color);
		background-color: var(--db-#{$variant}-contrast-high);

		&-interactive {
			@extend %db-#{$variant}-component;

			&:hover {
				background-color: var(--db-#{$variant}-contrast-high-hover);
			}

			&:active {
				background-color: var(--db-#{$variant}-contrast-high-pressed);
			}
		}
	}

	%db-#{$variant}-text-interactive {
		--db-current-color: var(--db-#{$variant}-contrast-high);
		color: var(--db-current-color);

		&:enabled {
			&:hover {
				--db-current-color: var(--db-#{$variant}-contrast-high-hover);
			}

			&:active {
				--db-current-color: var(--db-#{$variant}-contrast-high-pressed);
			}
		}
	}

	%db-bg-#{$variant}-variables {
		/* used for transparent backgrounds */
		--db-current-base-color: var(--db-#{$variant}-contrast-high);

		/* used for text */
		--db-current-color: var(--db-#{$variant}-on-bg);
		/* used for checkbox:checked */
		--db-current-color-hover: var(--db-#{$variant}-on-bg-hover);
		--db-current-color-pressed: var(--db-#{$variant}-on-bg-pressed);

		/* used as normal backgrounds */
		@if ($variant == "base") {
			--db-current-bg-color: var(--db-#{$variant}-bg);
		} @else {
			--db-current-bg-color: var(--db-#{$variant}-bg-weak);
		}

		/* used for icons and borders */
		--db-current-element-color: var(--db-#{$variant}-contrast-low);
		--db-current-border-color: var(--db-#{$variant}-border);
		--db-current-border-weak-color: var(--db-#{$variant}-border-weak);
	}

	%db-bg-#{$variant} {
		@extend %db-bg-#{$variant}-variables;
		background-color: var(--db-current-bg-color);
		color: var(--db-current-color);

		&-transparent {
			&-full,
			&-semi {
				@extend %db-bg-#{$variant}-variables;
			}

			&-full {
				@include set-transparent-bg(0);
			}

			&-semi {
				@include set-transparent-bg(0.08);
			}
		}

		&[data-emphasis="weak"] {
			/* used for text */
			--db-current-color: var(--db-#{$variant}-on-bg-weak);
			/* used for checkbox:checked */
			--db-current-color-hover: var(--db-#{$variant}-on-bg-weak-hover);
			--db-current-color-pressed: var(
				--db-#{$variant}-on-bg-weak-pressed
			);
			color: var(--db-current-color);
		}

		&-strong {
			--db-current-color: var(--db-#{$variant}-on-bg);
			--db-current-bg-color: var(--db-#{$variant}-bg-strong);
			--db-current-border-weak-color: var(--db-#{$variant}-border-weak);
			background-color: var(--db-current-bg-color);
			color: var(--db-current-color);

			&-interactive {
				@extend %db-bg-#{$variant}-strong;

				&:hover {
					background-color: var(--db-#{$variant}-bg-hover);
				}

				&:active {
					background-color: var(--db-#{$variant}-bg-pressed);
				}
			}
		}
	}
}
