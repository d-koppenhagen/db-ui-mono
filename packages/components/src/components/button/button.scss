@charset "utf-8";
@use "@db-ui/foundations/build/scss/density";
@use "@db-ui/foundations/build/scss/variables";
@use "@db-ui/foundations/build/scss/colors";
@use "@db-ui/foundations/build/scss/icons";
@use "../../styles/component";
@use "../../styles/button-components";

.db-button {
	@extend %default-interactive-component;
	@extend %default-button;

	color: colors.$db-current-color;

	block-size: variables.$db-sizing-md;
	inline-size: fit-content;
	padding: variables.$db-spacing-fixed-xs variables.$db-spacing-fixed-md;

	// disable text-decoration if someone wants to use the button for an <a> tag
	text-decoration: none;

	// Square icon only buttons
	&[data-no-text="true"] {
		@include icons.is-icon-text-replace();
		padding: 0;
		inline-size: variables.$db-sizing-md;
	}

	&[data-size="small"] {
		@extend %db-overwrite-font-size-sm;
		block-size: variables.$db-sizing-sm;

		&:not([data-no-text="true"]) {
			padding: variables.$db-spacing-fixed-3xs
				variables.$db-spacing-fixed-sm;

			&::before {
				margin-inline-end: variables.$db-spacing-fixed-2xs;
			}
		}

		// Square icon only buttons
		&[data-no-text="true"] {
			inline-size: variables.$db-sizing-sm;
		}
	}

	&[data-width="full"] {
		inline-size: 100%;
	}

	&[data-variant="brand"] {
		--db-current-icon-color: #{colors.$db-brand-on};
		@extend %transparent-border;
		background-color: colors.$db-brand;
		color: colors.$db-brand-on;

		&:not(:disabled) {
			&:hover {
				background-color: colors.$db-brand-hover;
			}

			&:active {
				background-color: colors.$db-brand-pressed;
			}
		}
	}

	&[data-variant="filled"],
	&[data-variant="ghost"] {
		@extend %transparent-border;
	}

	&[data-variant="outlined"],
	&:not([data-variant]),
	&[data-variant="ghost"] {
		background-color: colors.$db-current-bg-transparent-full;
	}

	&[data-variant="filled"] {
		background-color: colors.$db-current-bg-transparent-semi;
	}

	&:not(:disabled) {
		&:hover {
			background-color: colors.$db-current-bg-transparent-hover;
		}

		&:active {
			background-color: colors.$db-current-bg-transparent-pressed;
		}
	}

	&:disabled {
		opacity: component.$default-disabled;
	}

	// States (currently only "loading")
	&[data-state="loading"] {
		@include icons.is-icon-text-replace();

		&::before {
			content: "";
		}
	}

	&[data-state="loading"] {
		font-size: 0;
	}
}
