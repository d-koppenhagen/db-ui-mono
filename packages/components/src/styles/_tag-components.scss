@use "sass:map";
@use "component";
@use "@db-ui/foundations/build/scss/variables";
@use "@db-ui/foundations/build/scss/colors";

$interactive-selectors: "label, button:not(.db-tab-remove-button), a";

@mixin get-tag-colors() {
	@extend %db-bg-base-strong;

	&[data-emphasis="strong"] {
		// border should be same color like background
		--db-current-border-color: #{colors.$db-base-contrast-high};
		@extend %db-base-component;
	}

	@each $name in colors.$variant-colors {
		&[data-variant="#{$name}"] {
			@extend %db-bg-#{$name}-strong;

			&[data-emphasis="strong"] {
				// border should be same color like background
				--db-current-border-color: var(--db-#{$name}-contrast-high);
				@extend %db-#{$name}-component;
			}
		}
	}
}

@mixin get-interactive-selectors() {
	&:not(:has(dbbutton)) button:not(.db-tab-remove-button),
	dbbutton:not(.db-tab-remove-button) > button,
	db-button > button,
	a,
	label:has(input[type="checkbox"]:checked) {
		@content;
	}
}

@mixin get-tag-colors-interactive() {
	label:has(input) {
		background-color: colors.$db-current-bg-transparent-full;

		&:hover {
			background-color: colors.$db-current-bg-transparent-hover;
		}

		&:active {
			background-color: colors.$db-current-bg-transparent-pressed;
		}
	}

	&:not([data-emphasis]),
	&[data-emphasis="weak"] {
		@each $name in colors.$variant-colors {
			&[data-variant="#{$name}"] {
				label:has(input[type="checkbox"]:checked) {
					@extend %db-bg-#{$name}-variables;
				}
			}
		}

		@include get-interactive-selectors() {
			@extend %db-bg-base-strong-interactive;
		}

		label:has(input[type="radio"]:checked) {
			@extend %db-bg-base-strong;
		}

		@each $name in colors.$variant-colors {
			&[data-variant="#{$name}"] {
				@include get-interactive-selectors() {
					@extend %db-bg-#{$name}-strong-interactive;
				}

				label:has(input[type="radio"]:checked) {
					@extend %db-bg-#{$name}-strong;
				}
			}
		}
	}

	&[data-emphasis="strong"] {
		--db-current-color: #{colors.$db-base-bg};
		@include get-interactive-selectors() {
			@extend %db-base-component-interactive;
		}

		label:has(input[type="radio"]:checked) {
			@extend %db-base-component;
		}

		@each $name in colors.$variant-colors {
			&[data-variant="#{$name}"] {
				--db-current-color: var(--db-#{$name}-bg);
				@include get-interactive-selectors() {
					@extend %db-#{$name}-component-interactive;
				}

				label:has(input[type="radio"]:checked) {
					@extend %db-#{$name}-component;
				}
			}
		}

		&:has(input:checked, a, button) {
			--db-current-icon-color: var(--db-current-color);
			color: var(--db-current-color);
		}
	}
}
